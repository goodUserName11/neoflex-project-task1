-- Создание слоя детальных данных
CREATE SCHEMA IF NOT EXISTS ds;
CREATE TABLE ds.ft_balance_f(
    on_date       DATE NOT NULL,
    account_rk    NUMERIC NOT NULL,
    currency_rk   NUMERIC,
    balance_out   FLOAT,
	PRIMARY KEY (on_date, account_rk)
);

CREATE TABLE ds.ft_posting_f(
    oper_date         DATE NOT NULL,
    credit_account_rk NUMERIC NOT NULL,
    debet_account_rk  NUMERIC NOT NULL,
    credit_amount     FLOAT,
    debet_amount      FLOAT
);

CREATE TABLE ds.md_account_d(
	data_actual_date DATE NOT NULL,
	data_actual_end_date DATE NOT NULL,
	account_rk NUMERIC NOT NULL,
	account_number VARCHAR(20) NOT NULL,
	char_type VARCHAR(1) NOT NULL,
	currency_rk NUMERIC NOT NULL,
	currency_code VARCHAR(3) NOT NULL,
	PRIMARY KEY (data_actual_date, account_rk)
);

CREATE TABLE ds.md_currency_d(
	currency_rk FLOAT NOT NULL,
	data_actual_date DATE NOT NULL,
	data_actual_end_date DATE,
	currency_code VARCHAR(3),
	code_iso_char VARCHAR(3),
	PRIMARY KEY (currency_rk, data_actual_date)
);

CREATE TABLE ds.md_exchange_rate_d(
	data_actual_date DATE NOT NULL,
	data_actual_end_date DATE,
	currency_rk NUMERIC NOT NULL,
	reduced_cource FLOAT,
	code_iso_num VARCHAR(3),
	PRIMARY KEY (data_actual_date, currency_rk)
);

CREATE TABLE ds.md_ledger_account_s(
	chapter CHAR(1),
	chapter_name VARCHAR(16),
	section_number INT,
	section_name VARCHAR(22),
	subsection_name VARCHAR(21),
	ledger1_account INT,
	ledger1_account_name VARCHAR(47),
	ledger_account INT NOT NULL,
	ledger_account_name VARCHAR(153),
	characteristic CHAR(1),
	is_resident INT,
	is_reserve INT,
	is_reserved INT,
	is_loan INT,
	is_reserved_assets INT,
	is_overdue INT,
	is_interest INT,
	pair_account VARCHAR(5),
	start_date DATE NOT NULL,
	end_date DATE,
	is_rub_only INT,
	min_term VARCHAR(1),
	min_term_measure VARCHAR(1),
	max_term VARCHAR(1),
	max_term_measure VARCHAR(1),
	ledger_acc_full_name_translit VARCHAR(1),
	is_revaluation VARCHAR(1),
	is_correct VARCHAR(1),
	PRIMARY KEY (ledger_account, start_date)
);

-- Создание таблицы с логами
CREATE SCHEMA IF NOT EXISTS logs;
CREATE TABLE logs.log_table(
	log_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	start_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	end_timestamp TIMESTAMP,
	log_level VARCHAR(6) CONSTRAINT level_in_range CHECK (log_level = ANY(ARRAY['INFO', 'WARN', 'ERROR'])),
	log_message TEXT,
	PRIMARY  KEY (log_id)
)